import sys

count = [6,2,5,5,4,5,6,3,7,6]
min_first = [8,1,1,3,3,3,6]
min_mid = [8,0,0,0,0,0,0]
min_last = [0,0,1,7,4,5,6,8]

# 가장 작은 수를 표현하려면 가장 작은 자릿수를 가지면 된다.
# 8이 성냥을 가장 많이 소비하므로 8을 많이 사용하자
# 첫번째 숫자가 작으면 가장 작음 -> 그리디
#
# 가장 큰 수를 표현하려면 가장 큰 자릿수를 가지면 된다.
# 1이 가장 적게 소비하므로 1을 많이 소비하자


def matchstickMin(n):
    ret = 0
    len = n//7
    if len < 1:
        return min_last[n%7]
    elif len > 2:
        ret += min_first[n%7] * 10**len
        n -= n%7
        while n//7 > 1:
            min_mid[n - n%7]
    return ret

n = int(sys.stdin.readline())

# 2-> 1, 3->7 4->4 5->5 6->6, 7->8
# 8->16, 9->18, 10->33, 11->30, 12->38, 13->68, 14->88
#
# 첫 입력 n으로 자릿수 특정: n//7
# n%7로 해당 자리 입력
# 0->8, 1->1, 2->1, 3->3,


